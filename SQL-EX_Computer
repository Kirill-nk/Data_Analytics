1.1  2 computer
Краткая информация о базе данных "Компьютерная фирма":
Схема БД состоит из четырех таблиц: -Product(maker, model, type) -PC(code, model, speed, ram, hd, cd, price) -Laptop(code, model, speed, ram, hd, price, screen) -Printer(code, model, color, type, price)
Таблица Product представляет производителя (maker), номер модели (model) и тип ('PC' - ПК, 'Laptop' - ПК-блокнот или 'Printer' - принтер).
Предполагается, что номера моделей в таблице Product уникальны для всех производителей и типов продуктов.
В таблице PC для каждого ПК, однозначно определяемого уникальным кодом – code, указаны модель – model (внешний ключ к таблице Product), скорость - speed (процессора в мегагерцах), объем памяти - ram (в мегабайтах), размер диска - hd (в гигабайтах), скорость считывающего устройства - cd (например, '4x') и цена - price (в долларах).
Таблица Laptop аналогична таблице РС за исключением того, что вместо скорости CD содержит размер экрана -screen (в дюймах).
В таблице Printer для каждой модели принтера указывается, является ли он цветным - color ('y', если цветной), тип принтера - type (лазерный – 'Laser', струйный – 'Jet' или матричный – 'Matrix') и цена - price.

Laptop = spark.createDataFrame([
(1,'1298',350,32,4,700,11)
,(2,'1321',500,64,8,970,12)
,(3,'1750',750,128,12,1200,14)
,(4,'1298',600,64,10,1050,15)
,(5,'1752',750,128,10,1150,14)
,(6,'1298',450,64,10,950,12)
],\
    schema=["code", "model","speed","ram",\
           "hd","price","screen"]).cache()
Laptop.count()
Laptop.createTempView("Laptop")
Laptop.show(4)

+----+-----+-----+---+---+-----+------+
|code|model|speed|ram| hd|price|screen|
+----+-----+-----+---+---+-----+------+
|   1| 1298|  350| 32|  4|  700|    11|
|   2| 1321|  500| 64|  8|  970|    12|
|   3| 1750|  750|128| 12| 1200|    14|
|   4| 1298|  600| 64| 10| 1050|    15|
+----+-----+-----+---+---+-----+------+
only showing top 4 rows


PC = spark.createDataFrame([
(1,'1232',500,64,5,'12x',600)
,(2,'1121',750,128,14,'40x',850)
,(3,'1233',500,64,5,'12x',600)
,(4,'1121',600,128,14,'40x',850)
,(5,'1121',600,128,8,'40x',850)
,(6,'1233',750,128,20,'50x',950)
,(7,'1232',500,32,10,'12x',400)
,(8,'1232',450,64,8,'24x',350)
,(9,'1232',450,32,10,'24x',350)
,(10,'1260',500,32,10,'12x',350)
,(11,'1233',900,128,40,'40x',980)
,(12,'1233',800,128,20,'50x',970)
], \
    schema=["code", "model","speed","ram",\
           "hd","cd","price"]).cache()
PC.count()
PC.createTempView("PC")
PC.show(4)
+----+-----+-----+---+---+---+-----+
|code|model|speed|ram| hd| cd|price|
+----+-----+-----+---+---+---+-----+
|   1| 1232|  500| 64|  5|12x|  600|
|   2| 1121|  750|128| 14|40x|  850|
|   3| 1233|  500| 64|  5|12x|  600|
|   4| 1121|  600|128| 14|40x|  850|
+----+-----+-----+---+---+---+-----+
only showing top 4 rows

Product = spark.createDataFrame([
('B','1121','PC')
,('A','1232','PC')
,('A','1233','PC')
,('E','1260','PC')
,('A','1276','Printer')
,('D','1288','Printer')
,('A','1298','Laptop')
,('C','1321','Laptop')
,('A','1401','Printer')
,('A','1408','Printer')
,('D','1433','Printer')
,('E','1434','Printer')
,('B','1750','Laptop')
,('A','1752','Laptop')
,('E','2113','PC')
,('E','2112','PC')

], schema=["maker", "model","type"]).cache()
Product.count()
Product.createTempView("Product")
Product.show(4)

+-----+-----+----+
|maker|model|type|
+-----+-----+----+
|    B| 1121|  PC|
|    A| 1232|  PC|
|    A| 1233|  PC|
|    E| 1260|  PC|
+-----+-----+----+
only showing top 4 rows

Printer = spark.createDataFrame([
(1,'1276','n','Laser',400)
,(2,'1433','y','Jet',270)
,(3,'1434','y','Jet',290)
,(4,'1401','n','Matrix',150)
,(5,'1408','n','Matrix',270)
,(6,'1288','n','Laser',400)
], \
    schema=["code", "model","color","type","price"]).cache()
Printer.count()
Printer.createTempView("Printer")
Printer.show(4)

+----+-----+-----+------+-----+
|code|model|color|  type|price|
+----+-----+-----+------+-----+
|   1| 1276|    n| Laser|  400|
|   2| 1433|    y|   Jet|  270|
|   3| 1434|    y|   Jet|  290|
|   4| 1401|    n|Matrix|  150|
+----+-----+-----+------+-----+
only showing top 4 rows
